version: '3.8'

services:
  db_main:
    image: postgres
    env_file:
      - ./environment/.env.dev
    ports:
      - "5434:5434"
    volumes:
      - db_main:/var/lib/postgresql/data
  redis_main:
    image: redis:alpine
    restart: always
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --port $$REDIS_PORT"
    env_file:
      - ./environment/.env.dev
    ports:
      - "6379:6379"
  worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - ./environment/.env.dev
    environment:
      - REDIS_HOST=redis_main
    command: celery -A celery_tasks.worker worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db_main
      - redis_main

  flower:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - ./environment/.env.dev
    environment:
      - REDIS_HOST=redis_main
    command: sh -c `celery --broker=redis://:$${REDIS_PASSWORD}@$${REDIS_HOST}:$${REDIS_PORT}/0 flower --port=5001`
    volumes:
      - .:/app
    ports:
      - "5001:5001"
    healthcheck:
      test: sh -c `celery inspect ping -A celery_tasks.worker && celery inspect ping -A celery_tasks.worker2`
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - db_main
      - redis_main
      - worker


  db_test:
    image: postgres
    env_file:
      - ./environment/.env.test
    ports:
      - "5435:5435"
volumes:
  db_main: